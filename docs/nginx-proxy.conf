# Nginx configuration for VoiceVault production deployment
# HTTPS-only with Let's Encrypt challenge support
# 
# Usage:
# 1. Replace YOUR_DOMAIN.COM with your actual domain
# 2. Copy to /etc/nginx/sites-available/voicevault
# 3. Create symlink: ln -s /etc/nginx/sites-available/voicevault /etc/nginx/sites-enabled/
# 4. Setup SSL with: certbot --nginx -d YOUR_DOMAIN.COM -d www.YOUR_DOMAIN.COM
# 5. Test config: nginx -t
# 6. Reload nginx: systemctl reload nginx

# HTTP server - only for Let's Encrypt challenges
server {
    listen 80;
    listen [::]:80;
    server_name YOUR_DOMAIN.COM www.YOUR_DOMAIN.COM;

    # Let's Encrypt challenge location
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/html;
    }

    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server - main application
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOUR_DOMAIN.COM www.YOUR_DOMAIN.COM;

    # SSL certificate configuration (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.COM/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.COM/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # API routes - must come before frontend catch-all
    location /api/ {
        # File upload size limit
        client_max_body_size 500M;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Extended timeouts for file uploads and processing
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Frontend routes (catch-all) - must come after API routes
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}